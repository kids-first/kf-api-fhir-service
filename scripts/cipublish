#!/bin/bash

set -e
if [ -z $1 ]; then
    echo "Please specify kidsfirst or include"
    exit 1
fi
config_file=$(find . -name "config_${1}" | grep scripts)
source $config_file

function usage() {
    echo -n \
        "Usage: $(basename "$0")
Publish container images to Elastic Container Registry (ECR).
"
}

if [[ -n "${GIT_COMMIT}" ]]; then
    GIT_COMMIT="${GIT_COMMIT:0:7}"
else
    GIT_COMMIT="$(git rev-parse HEAD)"
fi

function amazon_ecr_login() {
    # Retrieves a temporary authorization token that can be used to access
    # Amazon ECR, along with the registry URL.
    read -r AUTHORIZATION_TOKEN ECR_REGISTRY \
        <<<"$(aws ecr get-authorization-token \
            --output "text" \
            --query "authorizationData[0].[authorizationToken, proxyEndpoint]")"

    # The authorization token is base64 encoded, and we need to strip the
    # protocol from the registry URL.
    AUTHORIZATION_TOKEN="$(echo "${AUTHORIZATION_TOKEN}" | base64 --decode)"
    ECR_REGISTRY="${ECR_REGISTRY##*://}"

    # Authenticate to the ECR registry. The authorization token is presented in
    # the format user:password.
    echo "${AUTHORIZATION_TOKEN##*:}" |
        docker login \
            --username "${AUTHORIZATION_TOKEN%%:*}" \
            --password-stdin "${ECR_REGISTRY}"
}

if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    if [[ "${1:-}" == "--help" ]]; then
        usage
    else
        amazon_ecr_login
        docker tag "${project_name}:${GIT_COMMIT}" \
            "${ECR_REGISTRY}/${project_name}:${GIT_COMMIT}"
        docker push "${ECR_REGISTRY}/${project_name}:${GIT_COMMIT}"
    fi
fi
